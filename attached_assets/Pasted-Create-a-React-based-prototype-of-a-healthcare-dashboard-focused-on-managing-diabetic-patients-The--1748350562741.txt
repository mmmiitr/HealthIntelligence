Create a React-based prototype of a healthcare dashboard focused on managing diabetic patients. The dashboard should include three tabs—Admin, Clinician, and Patient—representing different user roles without authentication. Use Material-UI for styling and Recharts for visualizations. Follow these steps:

Setup:
Initialize a new React project in Replit.
Install dependencies: Material-UI (@mui/material, @emotion/react, @emotion/styled) and Recharts (recharts).
Structure:
Build a single-page application with a tab navigation bar at the top to switch between Admin, Clinician, and Patient views.
Use Material-UI’s Tabs component to manage the tab state and display the appropriate dashboard.
Dashboards:
Create separate components for each tab: AdminDashboard, ClinicianDashboard, and PatientDashboard.
Populate each with mock data and relevant visualizations using Recharts.
Add a dropdown (Select component from Material-UI) for selecting time periods (e.g., "Last 3 Months", "Last 6 Months", "Last Year") that updates the charts dynamically with different mock data sets.
Tab Details:
Admin Dashboard: For hospital administrators.
Cards displaying total revenue, cost per patient, and bed occupancy.
A LineChart for revenue trends over time.
A BarChart for resource utilization by department.
A predictive analytics section with a LineChart showing predicted revenue (dashed line) and a shaded area for confidence intervals.
Clinician Dashboard: For healthcare providers.
Cards showing average A1C, patient adherence rate, and complication rate.
A LineChart for A1C trends across the patient population.
A PieChart for patient risk distribution (e.g., low, medium, high risk).
A table listing high-risk patients.
Patient Dashboard: For an individual patient (e.g., "John Doe").
Cards showing personal A1C level, next appointment, and medication adherence.
A LineChart for personal A1C history.
A section with static educational tips (e.g., diet recommendations).
Mock Data:
Use JavaScript objects to simulate data for all metrics and charts. For example:
Revenue trends: { month: 'Jan', revenue: 10000 }.
A1C trends: { month: 'Jan', a1c: 7.2 }.
Predictive data: { month: 'Apr', predictedRevenue: 15000, lowerCI: 14000, upperCI: 16000 }.
Provide separate data sets for each time period option in the dropdown.
Styling:
Use a professional, healthcare-oriented design with a blue and green color scheme (e.g., blue as primary, green as secondary).
Ensure responsiveness using Material-UI’s Grid system.
Use readable fonts and consistent spacing via Material-UI’s theme.
Accessibility:
Ensure proper color contrast for readability.
Make all interactive elements (tabs, dropdown) keyboard-navigable with appropriate ARIA labels.
Extras:
Add tooltips or placeholder text in each section to explain its purpose (e.g., “This chart will show real-time revenue trends in the final version”).
Include a header in each tab indicating the role (e.g., “Admin Dashboard”).
Provide the complete code for this prototype, including the main App.js, dashboard components, and mock data files, ready to run in Replit.