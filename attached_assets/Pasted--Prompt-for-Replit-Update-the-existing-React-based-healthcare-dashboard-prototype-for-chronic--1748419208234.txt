### Prompt for Replit

Update the existing React-based healthcare dashboard prototype for chronic care management of diabetic patients, focusing on enhancing the Admin and Clinician views, keeping the Patient view unchanged, and adding a Mock Data view. Use Material-UI for styling and Recharts for visualizations. Follow these steps:

1. **Setup**:  
   - Use the existing React project in Replit with dependencies: `@mui/material`, `@emotion/react`, `@emotion/styled`, `recharts`.  
   - Ensure `"type": "module"` in `package.json` for ES6 module support.

2. **Structure**:  
   - Retain the single-page app with Material-UI `Tabs` for Admin, Clinician, Patient, and a new Mock Data view.  
   - Use Material-UI `Grid` for responsive layouts.

3. **Dashboards**:  
   - **Admin Dashboard**: Enhance for hospital administrators.  
     - Add cards: Total revenue (diabetic patients), cost per patient, bed occupancy (diabetes-related).  
     - Update `LineChart` for revenue trends (historical + predicted with dashed line, shaded confidence interval).  
     - Add `BarChart` for resource utilization by department (e.g., Endocrinology, Pharmacy).  
     - Include AI/ML sections:  
       - Predicted patient-level revenue (next month/quarter).  
       - Predicted visit counts per patient.  
     - Add customization toggle (`Switch`) for financial vs. operational metrics.  
     - Add "HIPAA-compliant" badge.  
   - **Clinician Dashboard**: Enhance for healthcare providers.  
     - Add cards: Average HbA1c, patient adherence rate, complication rate.  
     - Update `LineChart` for HbA1c trends (historical + predicted).  
     - Add `PieChart` for patient risk distribution (low, medium, high).  
     - Add table for high-risk patients (Name, HbA1c, Last Visit, Risk Score).  
     - Include AI/ML sections:  
       - Predicted HbA1c (next month/quarter).  
       - Predicted visit counts.  
     - Add "Data encrypted" text.  
   - **Patient Dashboard**: Keep unchanged (placeholder with "Patient Dashboard - John Doe").  
   - **Mock Data Dashboard**: New view for technical team.  
     - Display tables for mock datasets:  
       - Revenue: `{ month, revenue, predictedRevenue, lowerCI, upperCI }`.  
       - HbA1c: `{ month, avgHbA1c, predictedHbA1c }`.  
       - Visits: `{ month, patientId, visitCount, predictedVisitCount }`.  
     - Add `LineChart` for each dataset.  
     - List additional data to consider (e.g., comorbidities, payer mix).

4. **Mock Data**:  
   - Create `mockData.js` with datasets for:  
     - Revenue: `{ month: 'Jan', revenue: 10000, predictedRevenue: 12000, lowerCI: 11000, upperCI: 13000 }`.  
     - HbA1c: `{ month: 'Jan', avgHbA1c: 7.2, predictedHbA1c: 7.0 }`.  
     - Visits: `{ month: 'Jan', patientId: 'P001', visitCount: 2, predictedVisitCount: 3 }`.  
   - Support multiple time periods (Last 3 Months, Last 6 Months, Last Year) via `Select` dropdown.

5. **AI/ML Models**:  
   - Simulate MVP models with mock data:  
     - HbA1c prediction (e.g., `predictedHbA1c: 7.0 ± 0.2`).  
     - Visit count prediction (Zero-Inflated Poisson, e.g., `predictedVisitCount: 3`).  
     - Revenue prediction (e.g., `predictedRevenue: $12000 ± $1000`).  
   - Show predictions in charts with dashed lines and shaded confidence intervals.

6. **Missing Elements**:  
   - Add diabetes-specific metrics (HbA1c, complications, insulin usage).  
   - Show outcome-revenue link (e.g., card noting lower HbA1c cuts hospitalization costs).  
   - Enable customization (financial/clinical toggle).  
   - Include privacy signals ("HIPAA-compliant", "Data encrypted").

7. **Styling**:  
   - Use blue-green scheme (`#1976d2`, `#4caf50`).  
   - Ensure responsiveness with `Grid`.  
   - Apply clear typography via Material-UI theme.

8. **Accessibility**:  
   - Ensure high contrast, ARIA labels for tabs/dropdowns, and keyboard navigation.

9. **Extras**:  
   - Add tooltips (e.g., “AI-driven HbA1c predictions in production”).  
   - Note in Mock Data view: “Consider adding: comorbidities, payer mix, regional trends.”

Provide updated code for `App.js`, `AdminDashboard.js`, `ClinicianDashboard.js`, `PatientDashboard.js`, `MockDataDashboard.js`, and `mockData.js`, ready to run in Replit.